buildscript {
  ext {
    springBootVersion = "1.2.8.RELEASE"
  }
  repositories {
    jcenter()
    maven { url "http://spinnaker.bintray.com/gradle" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath 'com.netflix.spinnaker.gradle:spinnaker-gradle-project:3.11.0'
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
  }
}

allprojects {
  apply plugin: 'spinnaker.project'
  apply plugin: 'groovy'

  ext {
    spinnakerDependenciesVersion = project.hasProperty('spinnakerDependenciesVersion') ? project.property('spinnakerDependenciesVersion') : '0.68.0'
  }

  def checkLocalVersions = [spinnakerDependenciesVersion: spinnakerDependenciesVersion]
  if (ext.has('versions')) {
    def extVers = ext.get('versions')
    if (extVers instanceof Map) {
      checkLocalVersions.putAll(extVers)
    }
  }

  def localVersions = checkLocalVersions.findAll { it.value.endsWith('-SNAPSHOT') }
  if (localVersions) {
    logger.info("Enabling mavenLocal repo for $localVersions")
    repositories {
      mavenLocal()
    }
  }

  spinnaker {
    dependenciesVersion = spinnakerDependenciesVersion
  }

  configurations.all {
    exclude group: 'javax.servlet', module: 'servlet-api'
    exclude group: 'javax.servlet', module: 'javax.servlet-api'
    resolutionStrategy {
      eachDependency {
        if (it.requested.group == 'org.springframework.boot') {
          it.useVersion '1.2.8.RELEASE'
        }
        if (it.requested.group == 'org.springframework') {
          it.useVersion '4.1.9.RELEASE'
        }
      }
    }
  }

  group = "com.netflix.spinnaker.gate"

  test {
    testLogging {
      exceptionFormat = 'full'
    }
  }
}

defaultTasks ':gate-web:bootRun'
