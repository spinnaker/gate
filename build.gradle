buildscript {
  ext {
    springBootVersion = "1.5.10.RELEASE"
    kotlinVersion = "1.2.41"
  }
  repositories {
    jcenter()
    maven { url "http://spinnaker.bintray.com/gradle" }
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath 'com.netflix.spinnaker.gradle:spinnaker-gradle-project:4.3.0'
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath "com.netflix.nebula:nebula-kotlin-plugin:${kotlinVersion}"
  }
}

allprojects {
  apply plugin: 'spinnaker.project'
  apply plugin: 'groovy'

  ext {
    spinnakerDependenciesVersion = '1.0.26'
    if (project.hasProperty('spinnakerDependenciesVersion')) {
      spinnakerDependenciesVersion = project.property('spinnakerDependenciesVersion')
    }
  }

  def checkLocalVersions = [spinnakerDependenciesVersion: spinnakerDependenciesVersion]
  if (ext.has('versions')) {
    def extVers = ext.get('versions')
    if (extVers instanceof Map) {
      checkLocalVersions.putAll(extVers)
    }
  }

  def localVersions = checkLocalVersions.findAll { it.value.endsWith('-SNAPSHOT') }
  if (localVersions) {
    logger.info("Enabling mavenLocal repo for $localVersions")
    repositories {
      mavenLocal()
    }
  }

  spinnaker {
    dependenciesVersion = spinnakerDependenciesVersion
  }

  configurations.all {
    exclude group: 'javax.servlet', module: 'servlet-api'
    exclude group: 'javax.servlet', module: 'javax.servlet-api'
  }

  tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
      jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8184'
    }
  }

  group = "com.netflix.spinnaker.gate"

  test {
    testLogging {
      exceptionFormat = 'full'
    }
  }
}

defaultTasks ':gate-web:bootRun'
