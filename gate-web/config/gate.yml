server:
  port: 8084

services:
  orca:
    baseUrl: http://localhost:8083
  front50:
    baseUrl: http://localhost:8080
  clouddriver:
    baseUrl: http://localhost:7002
# semi-optional services (Everybody except Netflix needs these):
  rosco:
    enabled: true
    baseUrl: http://localhost:8087
    # These are here only for Netflix, whose bakery does not support dynamically fetching these properties.
    # Modifying the details below when rosco.enabled is true will have no effect (do it in the Rosco config).
    defaults:
      bakeOptions:
        - cloudProvider: aws
          baseImages:
          - id: trusty
            shortDescription: v14.04
            detailedDescription: Ubuntu Trusty Tahr v14.04
            packageType: DEB
          - id: ubuntu
            shortDescription: v12.04
            detailedDescription: Ubuntu Precise Pangolin v12.04
            packageType: DEB
          - id: centos
            shortDescription: deprecated
            detailedDescription: CentOS v5.11
            packageType: RPM
# optional services:
  echo:
    enabled: false
  flapjack:
    enabled: false
  igor:
    enabled: false
  mahe:
    enabled: false

redis:
  connection: redis://localhost:6379

swagger:
  enabled: true
  title: Spinnaker API
  description:
  contact:
  patterns:
    - .*tasks.*
    - .*applications.*
    - .*securityGroups.*
    - /search
    - .*pipelines.*
    - .*loadBalancers.*
    - .*instances.*
    - .*images.*
    - .*elasticIps.*
    - .*credentials.*
    - .*events.*
    - .*builds.*
    - .*instanceTypes.*
    - .*vpcs.*
    - .*subnets.*
    - .*networks.*

hystrix:
  command:
## Hystrix Global Defaults
    default:
      execution.isolation.thread.timeoutInMilliseconds: 60000
## Command-specific overrides
    fetchGlobalAccounts:
      execution.isolation.thread.timeoutInMilliseconds: 2000

spring:
  jackson:
    mapper:
      SORT_PROPERTIES_ALPHABETICALLY: true
    serialization:
      ORDER_MAP_ENTRIES_BY_KEYS: true
#  oauth2:
#      client:
#        clientId:
#        clientSecret:
#        accessTokenUri:
#        userAuthorizationUri:
#        scope:
#          - email
#      resource:
#        userInfoUri:
