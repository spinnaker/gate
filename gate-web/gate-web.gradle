ext {
  springConfigLocation = System.getProperty('spring.config.location', "${System.getProperty('user.home')}/.spinnaker/")
  springProfiles = System.getProperty('spring.profiles.active', "test,local")
  repackage = System.getProperty('springBoot.repackage', "false")
}

tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
  systemProperty('spring.config.location', project.springConfigLocation)
  systemProperty('spring.profiles.active', project.springProfiles)
}

apply plugin: 'org.springframework.boot'
apply plugin: 'spinnaker.package'

repositories {
  maven {
    url 'https://repo.spring.io/libs-snapshot'
  }
}

dependencies {
  compile project(":gate-core")

  spinnaker.group('retrofitDefault')
  spinnaker.group("test")
  spinnaker.group("fiat")
  compile spinnaker.dependency("kork")
  compile spinnaker.dependency("korkStackdriver")
  compile spinnaker.dependency("korkSwagger")
  compile spinnaker.dependency("korkWeb")
  compile spinnaker.dependency("frigga")
  compile spinnaker.dependency('cglib')

  compile('org.springframework.session:spring-session-data-redis:1.1.1.RELEASE')

  // OAuth2
  compile 'org.springframework.security.oauth:spring-security-oauth2:2.1.1.RELEASE'
  compile 'com.squareup.retrofit:converter-simplexml:1.9.0' // Github OAuth

  // LDAP
  compile("org.springframework.security:spring-security-ldap:4.2.3.RELEASE")

  // SAML
  compile('org.opensaml:opensaml:2.6.4')
  compile("org.springframework.security.extensions:spring-security-saml2-core:1.0.2.RELEASE")
  compile("org.springframework.security.extensions:spring-security-saml-dsl:1.0.0.M3") {
    exclude group: 'org.springframework.boot'
    exclude group: 'org.springframework.security'
  }

  testCompile "com.squareup.okhttp:mockwebserver:${spinnaker.version('okHttp')}"
  testCompile spinnaker.dependency("korkJedisTest")

  //this brings in the jetty GzipFilter which boot will autoconfigure
  runtime 'org.eclipse.jetty:jetty-servlets:9.2.11.v20150529'
}

configurations.all {
  exclude group: 'javax.servlet', module: 'servlet-api'
  exclude group: "org.slf4j", module: "slf4j-log4j12"
  exclude group: "org.springframework.boot", module: "spring-boot-starter-data-rest"
}
tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
  classpath configurations.runtime + file('config')
}

tasks.bootRepackage.enabled = Boolean.valueOf(project.repackage)
